version: '3.8'

services:
  auth-db:
    container_name: auth-db
    image: postgres:15
    env_file:
      - ./auth-api/.env
    ports:
      - 5432:5432
    volumes:
      - auth-data:/var/lib/postgresql/data



  auth-api:
    container_name: auth-api
    build:
      context: ./auth-api
    restart: unless-stopped
    depends_on:
      - auth-db
    command:
      sh -c "./wait-for-it.sh auth-db:5432 --strict --timeout=60 -- python init_db.py && uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    volumes:
      - ./auth-api:/code
      - ./wait-for-it.sh:/code/wait-for-it.sh
    ports:
      - 8000:8000

  
  tagging-api:
    container_name: tagging-api
    image: tagging-api
    restart: unless-stopped
    build: 
      context: ./taggingAPI
    volumes:
      - ./taggingAPI/app:/app 
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - internal


  talkeasy-db:
    image: postgres:15
    container_name: talkeasy_postgres
    restart: unless-stopped
    env_file:
      - ./talkeasy/.env
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - internal


  talkeasy-api:
    build: ./talkeasy/
    container_name: talkeasy_api
    restart: unless-stopped
    depends_on:
      - talkeasy-db
    command:
      sh -c "./wait-for-it.sh talkeasy-db:5432 --strict --timeout=60 -- python init_db.py && uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    volumes:
      - ./wait-for-it.sh:/code/wait-for-it.sh
      - ./talkeasy/:/code
    networks:
      - internal


  gateway:
    build:
      context: ./api-gateway
    container_name: gateway-talkeasy
    restart: unless-stopped
    ports:
      - "8000:8000"
    depends_on:
      - auth-api
      - talkeasy-api
      - tagging-api
    environment:
      - AUTH_API_URL=http://auth-api:8000
      - TALKEASY_API_URL=http://talkeasy-api:8000
    volumes:
      - ./api-gateway/:/code
    command: 
      uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - internal


volumes:
  pgdata:
  auth-data:

networks:
  internal:
    driver: bridge